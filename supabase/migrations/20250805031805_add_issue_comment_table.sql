-- Create issue_comment table
CREATE TABLE IF NOT EXISTS "public"."issue_comment" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "issue_id" bigint NOT NULL,
    "content" "text" NOT NULL,
    "created_by" "uuid" NOT NULL,
    "is_edited" boolean DEFAULT false,
    "parent_id" bigint
);
-- Set primary key
ALTER TABLE "public"."issue_comment" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."issue_comment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
-- Add primary key constraint
ALTER TABLE ONLY "public"."issue_comment"
    ADD CONSTRAINT "issue_comment_pkey" PRIMARY KEY ("id");
-- Add foreign key constraints
ALTER TABLE ONLY "public"."issue_comment"
    ADD CONSTRAINT "issue_comment_issue_id_fkey" FOREIGN KEY ("issue_id") REFERENCES "public"."issue"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."issue_comment"
    ADD CONSTRAINT "issue_comment_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE ONLY "public"."issue_comment"
    ADD CONSTRAINT "issue_comment_parent_id_fkey" FOREIGN KEY ("parent_id") REFERENCES "public"."issue_comment"("id") ON UPDATE CASCADE ON DELETE CASCADE;
-- Enable RLS
ALTER TABLE "public"."issue_comment" ENABLE ROW LEVEL SECURITY;
-- Create policies
CREATE POLICY "Enable read access for all users" ON "public"."issue_comment" FOR SELECT USING (true);
CREATE POLICY "Enable insert for authenticated users only" ON "public"."issue_comment" FOR INSERT TO "authenticated" WITH CHECK (true);
CREATE POLICY "Enable update for users based on created_by" ON "public"."issue_comment" FOR UPDATE USING ((( SELECT "auth"."uid"() AS "uid") = "created_by")) WITH CHECK ((( SELECT "auth"."uid"() AS "uid") = "created_by"));
CREATE POLICY "Enable delete for users based on created_by" ON "public"."issue_comment" FOR DELETE USING ((( SELECT "auth"."uid"() AS "uid") = "created_by"));
-- Grant permissions
GRANT ALL ON TABLE "public"."issue_comment" TO "anon";
GRANT ALL ON TABLE "public"."issue_comment" TO "authenticated";
GRANT ALL ON TABLE "public"."issue_comment" TO "service_role";
GRANT ALL ON SEQUENCE "public"."issue_comment_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."issue_comment_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."issue_comment_id_seq" TO "service_role";
